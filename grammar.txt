# This is the grammar understood by the Parser

program -> declaration* EOF

declaration -> variableDeclaration | statement;



variableDeclaration -> 'var' IDENTIFIER ('=' expression)? ';'

statement -> expressionStatement | printStatement | block

printStatement -> 'print' expression ';'

expressionStatement -> expression ';'

block -> '{' declaration '}'



expression -> commaSeparated

commaSeparated -> assignment ( "," assignment )*

assignment -> IDENTIFIER '=' assignment | equality

equality -> comparison ( ('!=' | '==') comparison )*

comparison -> addition ( ('<' | '>' | '<=' | '>=') addition )*

addition -> multiplication ( ( '+' | '-' ) multiplication )*

multiplication -> unary ( ( '/' | '-' ) unary )*

unary -> ( '!' | '-' ) unary | primary

primary -> NUMBER
         | STRING
         | "false"
         | "true"
         | "nil"
         | "(" commaSeparated ")"
         | IDENTIFIER
